from django.db import models
import datetime

class rA(models.Model):
    "base with min flags"
    c001 = models.AutoField(primary_key=True)
    c002 = models.BooleanField()
    c003 = models.CharField(maxlength='256')
    c004 = models.CommaSeparatedIntegerField(maxlength='256')
    c005 = models.DateField()
    c006 = models.DateTimeField()
    c007 = models.DecimalField(decimal_places=5, max_digits=10)
    c008 = models.EmailField()
    c010 = models.FileField(upload_to='/tmp')
    c011 = models.FilePathField()
    c012 = models.FloatField()
    c013 = models.IPAddressField()
    c014 = models.ImageField(upload_to='/tmp')
    c015 = models.IntegerField()
    c016 = models.NullBooleanField()
#    c017 = models.OrderingField(maxlength='256')
    c018 = models.PhoneNumberField()
    c019 = models.PositiveIntegerField()
    c020 = models.PositiveSmallIntegerField()
    c021 = models.SlugField()
    c022 = models.SmallIntegerField()
    c023 = models.TextField()
    c024 = models.TimeField()
    c025 = models.URLField()
    c026 = models.USStateField()
    c027 = models.XMLField()
    a002 = models.BooleanField()
    a003 = models.CharField(maxlength='256')
    a004 = models.CommaSeparatedIntegerField(maxlength='256')
    a005 = models.DateField()
    a006 = models.DateTimeField()
    a007 = models.DecimalField(decimal_places=5, max_digits=10)
    a008 = models.EmailField()
    a010 = models.FileField(upload_to='/tmp')
    a011 = models.FilePathField()
    a012 = models.FloatField()
    a013 = models.IPAddressField()
    a014 = models.ImageField(upload_to='/tmp')
    a015 = models.IntegerField()
    a016 = models.NullBooleanField()
#    a017 = models.OrderingField(maxlength='256')
    a018 = models.PhoneNumberField()
    a019 = models.PositiveIntegerField()
    a020 = models.PositiveSmallIntegerField()
    a021 = models.SlugField()
    a022 = models.SmallIntegerField()
    a023 = models.TextField()
    a024 = models.TimeField()
    a025 = models.URLField()
    a026 = models.USStateField()
    a027 = models.XMLField()
    class Meta:
        aka = 'A'

class rB(models.Model):
    "base with max flags"
    r001 = models.AutoField(primary_key=True, null=True, blank=True)
    r002 = models.BooleanField(default=False, null=True, blank=True)
    r003 = models.CharField(maxlength='256', default='x', null=True, blank=True)
    r004 = models.CommaSeparatedIntegerField(maxlength='256', default='1', null=True, blank=True)
    r005 = models.DateField(default=datetime.datetime.now(), null=True, blank=True)
    r006 = models.DateTimeField(default=datetime.datetime.now(), null=True, blank=True)
    r007 = models.DecimalField(decimal_places=5, max_digits=10, default=2, null=True, blank=True)
    r008 = models.EmailField(default='x', null=True, blank=True)
    r010 = models.FileField(upload_to='/tmp', null=True, blank=True)
    r011 = models.FilePathField(default='x', null=True, blank=True)
    r012 = models.FloatField(default=2.0, null=True, blank=True)
    r013 = models.IPAddressField(default='x', null=True, blank=True)
    r014 = models.ImageField(upload_to='/tmp', null=True, blank=True)
    r015 = models.IntegerField(default=2, null=True, blank=True)
    r016 = models.NullBooleanField(default=True, null=True, blank=True)
#    r017 = models.OrderingField(maxlength='256', null=True, blank=True)
    r018 = models.PhoneNumberField(default='555-867-5309', null=True, blank=True)
    r019 = models.PositiveIntegerField(default=7, null=True, blank=True)
    r020 = models.PositiveSmallIntegerField(default=6, null=True, blank=True)
    r021 = models.SlugField(default='x', null=True, blank=True)
    r022 = models.SmallIntegerField(default=-2, null=True, blank=True)
    r023 = models.TextField(default='x', null=True, blank=True)
    r024 = models.TimeField(default=datetime.datetime.now(), null=True, blank=True)
    r025 = models.URLField(default='x', null=True, blank=True)
    r026 = models.USStateField(default='TX', null=True, blank=True)
    r027 = models.XMLField(default='x', null=True, blank=True)
    
    class Meta:
        aka = 'B'

class rC(models.Model):
    "all with akas"

    class Meta:
        aka = 'C'
